"""create position tables

Revision ID: d9bbd4059456
Revises: 4eefa1ce1f7a
Create Date: 2025-10-22 04:39:49.669238

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd9bbd4059456'
down_revision: Union[str, Sequence[str], None] = '4eefa1ce1f7a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('position_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.String(length=64), nullable=False),
    sa.Column('symbol', sa.String(length=32), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('long_exchange', sa.String(length=32), nullable=False),
    sa.Column('short_exchange', sa.String(length=32), nullable=False),
    sa.Column('leverage', sa.Float(), nullable=False),
    sa.Column('margin_per_leg', sa.Float(), nullable=False),
    sa.Column('notional_per_leg', sa.Float(), nullable=False),
    sa.Column('funding_diff', sa.Float(), nullable=False),
    sa.Column('expected_rate8h', sa.Float(), nullable=False),
    sa.Column('simulated', sa.Boolean(), nullable=False),
    sa.Column('opened_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('close_reason', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_position_groups_group_id'), 'position_groups', ['group_id'], unique=True)
    op.create_table('position_legs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('exchange', sa.String(length=32), nullable=False),
    sa.Column('side', sa.String(length=8), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('entry_price', sa.Float(), nullable=False),
    sa.Column('exit_price', sa.Float(), nullable=True),
    sa.Column('margin', sa.Float(), nullable=False),
    sa.Column('notional', sa.Float(), nullable=False),
    sa.Column('fee_rate', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('opened_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('pnl', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['position_groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('position_legs')
    op.drop_index(op.f('ix_position_groups_group_id'), table_name='position_groups')
    op.drop_table('position_groups')
    # ### end Alembic commands ###
